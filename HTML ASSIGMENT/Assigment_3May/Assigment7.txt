 Explain in brief about the nesting operators in emmet


 Abbreviations Syntax
Emmet uses syntax similar to CSS selectors for describing elements’ positions inside generated tree and elements’ attributes.

Elements
You can use elements’ names like div or p to generate HTML tags. Emmet doesn’t have a predefined set of available tag names, you can write any word and transform it into a tag: div → <div></div>, foo → <foo></foo> and so on.

Nesting operators
Nesting operators are used to position abbreviation elements inside generated tree: whether it should be placed inside or near the context element.

Child: >
You can use > operator to nest elements inside each other:

div>ul>li
...will produce

<div>
    <ul>
        <li></li>
    </ul>
</div>
Sibling: +
Use + operator to place elements near each other, on the same level:

div+p+bq
...will output

<div></div>
<p></p>
<blockquote></blockquote>
Climb-up: ^
With > operator you’re descending down the generated tree and positions of all sibling elements will be resolved against the most deepest element:

div+div>p>span+em 
...will be expanded to

<div></div>
<div>
    <p><span></span><em></em></p>
</div>
With ^ operator, you can climb one level up the tree and change context where following elements should appear:

div+div>p>span+em^bq
...outputs to

<div></div>
<div>
    <p><span></span><em></em></p>
    <blockquote></blockquote>
</div>
You can use as many ^ operators as you like, each operator will move one level up:

div+div>p>span+em^^^bq
...will output to

<div></div>
<div>
    <p><span></span><em></em></p>
</div>